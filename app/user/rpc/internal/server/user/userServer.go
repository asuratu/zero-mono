// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"mono/app/user/rpc/internal/logic/user"
	"mono/app/user/rpc/internal/svc"
	"mono/app/user/rpc/pb/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) GetUser(ctx context.Context, in *user.GetUserRequest) (*user.GetUserResponse, error) {
	l := userlogic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

func (s *UserServer) CreateUser(ctx context.Context, in *user.CreateUserRequest) (*user.CreateUserResponse, error) {
	l := userlogic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServer) UpdateUser(ctx context.Context, in *user.UpdateUserRequest) (*user.DefaultResponse, error) {
	l := userlogic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserServer) DeleteUser(ctx context.Context, in *user.DeleteUserRequest) (*user.DefaultResponse, error) {
	l := userlogic.NewDeleteUserLogic(ctx, s.svcCtx)
	return l.DeleteUser(in)
}
